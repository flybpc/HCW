<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置整合mybatis过程-->

    <!--1 >+< 配置数据库相关参数-->
    <context:property-placeholder location="classpath:dbconfig.properties" ignore-unresolvable="true"/>


    <!-- 2 >+< 数据源druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_username}" />
        <property name="password" value="${jdbc_password}" />
		<property name="validationQuery" value="${validationQuery}" />
        <!--配置初始化大小,最小，最大 -->
        <property name="initialSize" value="${druid.pool.size.init}" />
        <property name="maxActive" value="${druid.pool.size.max}" />
        <property name="minIdle" value="${druid.pool.size.min}" />


        <!-- 配置监控统计拦截的filters,wall用于防止sql注入，stat用于统计分析 -->
        <property name="filters" value="wall,stat" />
    </bean>
    

    <!-- 3 >+< 配置SqlSessionFactory 对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource" />

        <property name="typeAliasesPackage" value="com.haro.netty.test.pojo"/>
        <!--
        <property name="mapperLocations" value="classpath:com/haro/netty/test/mapper/*.xml" />
        -->
    </bean>

    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.haro.netty.test.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
    <!-- ========================================分隔线========================================= -->

    <!--扫描service包(包含子包)下所有使用注解的类型-->
    <context:component-scan base-package="com.haro.netty.service"/>

    <!--配置事务管理器(mybatis采用的是JDBC的事务管理器)-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置基于注解的声明式事务,默认使用注解来管理事务行为-->
    <tx:annotation-driven transaction-manager="transactionManager"/>



</beans>